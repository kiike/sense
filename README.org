#+TITLE: sense.py: monitor your sensors from the terminal
#+AUTHOR: Enric Morales <me@enric.me>

#+CAPTION: sense.py in action
#+NAME: fig:sensepy-demo
[[https://github.com/kiike/sense/raw/gh-pages/demo.gif]]

* Project goal
  The goal of this project is to create a lightweight and useful sensor monitor.
  Its capabilities should be similar to those of [[https://github.com/mikaku/Monitorix][Monitorix]] and especially more
  useful for overclocking and monitoring the system stability at a glance.

* Inspiration
  This program was started for the need to have a similar app like [[https://www.hwinfo.com/][HWInfo]], which
  is supported only on Windows, available for Linux systems. Major props to
  Martin Malik for such a great tool.

* Features
  - Easy on the CPU and your eyes
  - Urwid-based (NCurses-like) interface
  - Monitoring of the following:
    - CPU frequency
    - CPU thermals
    - CPU voltage (VCCIN, similar to VCore)
    - System voltages
    - System thermals
    - CPU usage
    - nVIDIA GTX-series usages, thermals and clocks

* Non-features
  The aim of this program is not monitoring:
  - Network throughput
  - Disk usage
  - Processes running

* Requirements
  To run this program, you will need.
  - Python 3+
  - Urwid (the library that draws the UI)
  - python-sensors from [[https://bitbucket.org/gleb_zhulik/][this repo]] for binding with lm-sensors
  - psutil to get the CPU usage
  - pyyaml for reasonable configuration reading/writing

* Running
  1. Clone this repo
  2. Install the dependencies using `pip install -r requirements.txt`
  3. Activate the virtualenv
  4. Run the provided `sense.py` as root to get all the CPU info, or as
  user to get a more limited set of data.

* License
  This program is licensed under the terms of the ISC License.
